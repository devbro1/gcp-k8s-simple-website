version: "3.8"

x-postgres-common:
  &postgres-common
  image: postgres:14-alpine
  user: postgres
  restart: always
  healthcheck:
    test: 'pg_isready -U postgres --dbname=postgres'
    interval: 10s
    timeout: 5s
    retries: 5

services:
  web:
    hostname: web
    build:
      context: .
      dockerfile: web.Dockerfile
    environment:
    - FLASK_ENV=production
    - FLASK_APP=app.py
    - FLASK_RUN_HOST=0.0.0.0
    - FLASK_RUN_PORT=80
    - DATABASE_URL=postgresql+psycopg2://postgres:postgres@db-primary/tododb
    ports:
    - "80:80"
    depends_on:
    - db-primary

  db-primary:
    <<: *postgres-common
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: tododb
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: "password\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=password"
    command: |
      postgres 
      -c wal_level=replica 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
    volumes:
      - ./00_init.sql:/docker-entrypoint-initdb.d/00_init.sql

  db-replica:
    <<: *postgres-common
    ports:
      - 5433:5432
    environment:
      PGUSER: postgres
      PGPASSWORD: postgres
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=db-primary --port=5432
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
